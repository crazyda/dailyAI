package com.axp.dao.impl;import java.util.List;import org.hibernate.Query;import org.hibernate.Session;import org.springframework.stereotype.Repository;import com.axp.dao.RePermissionRoleDAO;import com.axp.model.AdminUser;import com.axp.model.RePermissionRole;import com.axp.query.PageResult;import com.axp.util.StringUtil;@Repositorypublic class RePermissionRoleDAOImpl extends BaseDaoImpl<RePermissionRole> implements RePermissionRoleDAO {    @Override    public PageResult<RePermissionRole> getRoleList(Integer adminUserId, Integer currentPage, Integer pageSize, String permissionName) {        Session session = sessionFactory.getCurrentSession();        //先查询总条数；        Query query1;        if (StringUtil.isEmpty(permissionName)) {            query1 = session.createQuery("select count(id) from RePermissionRole where isValid=1 and adminusers.id=:id");            query1.setParameter("id", adminUserId).uniqueResult();        } else {            query1 = session.createQuery("select count(id) from RePermissionRole where isValid=1 and adminusers.id=:id and name like \'%" + permissionName + "%\'");            query1.setParameter("id", adminUserId).uniqueResult();        }        Long count = (Long) query1.uniqueResult();        //计算当前页的数据；        Query query2;        if (StringUtil.isEmpty(permissionName)) {            query2 = session.createQuery("from RePermissionRole where isValid=1 and adminusers.id=:id");            query2.setParameter("id", adminUserId).setFirstResult((currentPage - 1) * pageSize).setMaxResults(pageSize);        } else {            query2 = session.createQuery("from RePermissionRole where isValid=1 and adminusers.id=:id and name like \'%" + permissionName + "%\'");            query2.setParameter("id", adminUserId).setFirstResult((currentPage - 1) * pageSize).setMaxResults(pageSize);        }        List<RePermissionRole> list = query2.list();        //返回结果；        return new PageResult<>(Integer.parseInt(count.toString()), pageSize, currentPage, list);    }    @Override    public List<RePermissionRole> getRolesByAdminList(List<AdminUser> roleUser) {        Session session = sessionFactory.getCurrentSession();        Query query = session.createQuery("from RePermissionRole where isValid=1 and adminusers in :adminList")                .setParameterList("adminList", roleUser);        return query.list();    }}