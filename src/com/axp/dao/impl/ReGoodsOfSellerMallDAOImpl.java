package com.axp.dao.impl;import java.util.HashMap;import java.util.List;import java.util.Map;import org.hibernate.Query;import org.hibernate.SQLQuery;import org.hibernate.Session;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Repository;import com.axp.dao.AdminUserDAO;import com.axp.dao.DateBaseDAO;import com.axp.dao.ReGoodsOfSellerMallDAO;import com.axp.model.AdminUser;import com.axp.model.ProvinceEnum;import com.axp.model.ReGoodsOfSellerMall;import com.axp.model.Seller;import com.axp.query.PageResult;import com.axp.util.QueryModel;@Repository@SuppressWarnings("unchecked")public class ReGoodsOfSellerMallDAOImpl extends BaseDaoImpl<ReGoodsOfSellerMall> implements ReGoodsOfSellerMallDAO {	@Autowired 	private  DateBaseDAO  dateBaseDAO;	@Autowired 	private AdminUserDAO adminUserDAO;    @Override    public PageResult<ReGoodsOfSellerMall> getGoodsList(Seller seller, Integer currentPage, Integer pageSize, String searchWord, Integer goodsType) {        Session session = sessionFactory.getCurrentSession();        //先获取查询条件；r.snapshotGoods.seller=:seller and        String queryCount = "select count(r) from ReGoodsOfSellerMall r where  isValid=1 and r.snapshotGoods.name like "                + searchWord;        String queryList = "from ReGoodsOfSellerMall r where  isValid=1 and r.snapshotGoods.name like "                + searchWord + " order by r.stickyNum desc, r.id desc";        //先查询总条数；        Query query1 = session.createQuery(queryCount);        Long count = (Long) query1.uniqueResult();        //计算当前页的数据；        Query query2 = session.createQuery(queryList).setFirstResult((currentPage - 1) * pageSize)                .setMaxResults(pageSize);        List<ReGoodsOfSellerMall> list = query2.list();        //返回结果；        return new PageResult<>(Integer.parseInt(count.toString()), pageSize, currentPage, list);    }    @Override    public int findMasStickyNum(Integer sellerId) {        Session session = sessionFactory.getCurrentSession();        String queryCount = "select max(stickyNum) from ReGoodsOfSellerMall where snapshotGoods.seller.id = " + sellerId;        Query query = session.createQuery(queryCount);        return (int) query.uniqueResult();    }    @Override    public PageResult<ReGoodsOfSellerMall> getCheckPageresult(Integer currentPage, Integer pageSize,Integer adminUserId) {    	AdminUser adminUser = adminUserDAO.findById(adminUserId);    	ProvinceEnum provinceEnum = adminUser.getProvinceEnum();    	StringBuilder sb = new StringBuilder();        List<ReGoodsOfSellerMall> list= null;        QueryModel queryModel = new QueryModel();        queryModel.combPreEquals("isValid", true);        queryModel.combPreEquals("isChecked", false);		if(adminUser.getLevel()>=65&&adminUser.getLevel()<95){						if(provinceEnum.getLevel()==1){				sb.append("( snapshotGoods.seller.provinceEnum.id="+provinceEnum.getId()).				append(" or snapshotGoods.seller.provinceEnum.provinceEnum.id="+provinceEnum.getId()).				append(" or snapshotGoods.seller.provinceEnum.provinceEnum.provinceEnum.id="+provinceEnum.getId()).				append(")");			}else if(provinceEnum.getLevel()==2){ //地级市				queryModel.combCondition("  snapshotGoods.seller.provinceEnum.provinceEnum2.id= "+provinceEnum.getId()+"  or "						+ "  snapshotGoods.seller.provinceEnum.id= "+provinceEnum.getId());			}else if(provinceEnum.getLevel2()==3&&provinceEnum.getLevel()==2||provinceEnum.getLevel()==3){ //县级市				sb.append("( snapshotGoods.seller.provinceEnum.id="+provinceEnum.getId()).				append(")");			}			queryModel.combCondition(sb.toString());		}		Integer count = dateBaseDAO.findCount(ReGoodsOfSellerMall.class, queryModel);		list=	dateBaseDAO.findPageList(ReGoodsOfSellerMall.class, queryModel, (currentPage-1)*pageSize, pageSize);				 //返回结果；        return new PageResult<>(Integer.parseInt(count.toString()), pageSize, currentPage, list);            }    @Override    public List<ReGoodsOfSellerMall> getGoodsByBaseGoodsId(Integer id) {        Session session = sessionFactory.getCurrentSession();        String hql = "from ReGoodsOfSellerMall where isValid=1 and baseGoodsId=" + id;        Query query = session.createQuery(hql);        return query.list();    }	@Override	public List<Object[]> findPutStatus(Integer sellerMallId) {		Session session=sessionFactory.getCurrentSession();		String  sql="select (select count(*) as '本地特产' from re_goodsoflocalspecialtymall "				+ " where isvalid=1 and sellerMallId=:id), (select count(*)  as '普通优惠券'"				+ " from re_goodsofextendmall  where isvalid=1 and isactivity=0 and  sellerMallId=:id),"				+ "(select count(*) as '积分商城' from re_goodsofscoremall   where isvalid=1 and sellerMallId=:id), "				+ "(select count(*) as '秒杀商城' from re_goodsofseckillmall  where isvalid=1 and sellerMallId=:id), "				+ "(select count(*) as '拼团' from re_goodsofteammall   where isvalid=1 and sellerMallId=:id)," 						+ "(select count(*) as '换货会' from re_goodsofChangeMall   where isvalid=1 and sellerMallId=:id)," 				+ "(select count(*) as '积分抽奖' from re_goodsoflockMall   where isvalid=1 and sellerMallId=:id);";	 Map<String, Object> map=new HashMap<String, Object>();		map.put("id",sellerMallId);				 SQLQuery createSQLQuery = session.createSQLQuery(sql);		 createSQLQuery.setProperties(map);						return createSQLQuery.list();	}}