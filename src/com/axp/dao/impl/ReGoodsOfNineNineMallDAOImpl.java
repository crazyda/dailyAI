package com.axp.dao.impl;import java.util.List;import org.hibernate.Query;import org.hibernate.Session;import org.springframework.stereotype.Repository;import com.axp.dao.ReGoodsOfNineNineMallDAO;import com.axp.model.ReGoodsOfNineNineMall;import com.axp.model.Seller;import com.axp.query.PageResult;@Repository@SuppressWarnings("unchecked")public class ReGoodsOfNineNineMallDAOImpl extends BaseDaoImpl<ReGoodsOfNineNineMall> implements ReGoodsOfNineNineMallDAO {	@Override	public PageResult<ReGoodsOfNineNineMall> getGoodsList(Seller seller, Integer currentPage, Integer pageSize, String searchWord) {		Session session = sessionFactory.getCurrentSession();		//先获取查询条件；		String queryCount = "select count(r) from ReGoodsOfNineNineMall r where r.snapshotGoods.seller=:seller and isValid=1 and r.snapshotGoods.name like "				+ searchWord;		String queryList = "from ReGoodsOfNineNineMall r where r.snapshotGoods.seller=:seller and isValid=1 and r.snapshotGoods.name like "				+ searchWord + " order by r.id desc";		//先查询总条数；		Query query1 = session.createQuery(queryCount);		Long count = (Long) query1.setParameter("seller", seller).uniqueResult();		//计算当前页的数据；		Query query2 = session.createQuery(queryList).setParameter("seller", seller).setFirstResult((currentPage - 1) * pageSize)				.setMaxResults(pageSize);		List<ReGoodsOfNineNineMall> list = query2.list();		//返回结果；		return new PageResult<>(Integer.parseInt(count.toString()), pageSize, currentPage, list);	}	@Override	public PageResult<ReGoodsOfNineNineMall> getCheckPageresult(Integer currentPage, Integer pageSize) {		Session session = sessionFactory.getCurrentSession();		//先获取查询条件；		String queryCount = "select count(r) from ReGoodsOfNineNineMall r where isValid=1 and isChecked=0";		String queryList = "from ReGoodsOfNineNineMall r where isValid=1 and isChecked=0 order by id desc";		//先查询总条数；		Long count = (Long) session.createQuery(queryCount).uniqueResult();		//计算当前页的数据；		List<ReGoodsOfNineNineMall> list = session.createQuery(queryList)				.setFirstResult((currentPage - 1) * pageSize)				.setMaxResults(pageSize).list();		//返回结果；		return new PageResult<>(Integer.parseInt(count.toString()), pageSize, currentPage, list);	}    @Override    public List<ReGoodsOfNineNineMall> getGoodsByBaseGoodsId(Integer id) {		Session session = sessionFactory.getCurrentSession();		String hql = "from ReGoodsOfNineNineMall r where isValid=1 and baseGoodsId=" + id;		return session.createQuery(hql).list();    }}