package com.axp.service.order;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import com.axp.model.AdminUser;import com.axp.model.OrderComment;import com.axp.model.ReGoodsorder;import com.axp.model.ReGoodsorderItem;import com.axp.query.PageResult;public interface ReGoodsorderService {    /**     * 通过用户id，获取这个用户的所有订单对象；     * 要求：     * 1，如果是普通用户，能获取自己的所有订单；     * 2，如果是超级管理员，能看见所有订单，     *     * @param adminUser   当前用户；     * @param currentPage 当前页；     * @param pageSize    每页条数；     * @return     */    PageResult<ReGoodsorder> getReGoodsOrderByAdminUserId(AdminUser adminUser,StringBuffer condition, Integer currentPage, Integer pageSize) throws Exception;    /**     * 前端传来主菜单ID     * 修改主订单和子订单的状态     * @param request     * @return     */    Map<String,Object> ensureByAjax(HttpServletRequest request);        /**     * 添加主订单物流信息，并修改订单状态     * @param request     * @param id     */    void updateDetail(HttpServletRequest request,Integer id);    /**     * 获取订单列表     * @param adminUserId 	当前账号ID     * @param request		     * @param currentPage	当前页     */	void getOrderList(Integer adminUserId, HttpServletRequest request,Integer currentPage,Integer draw);	/**	 *	根据订单Id 获取主订单和子订单所有信息	 * @param request	 */	void getOrderById(HttpServletRequest request);	/**	 * 修改订单状态	 * @param request	 * @param status	 */	void changeStatus(HttpServletRequest request, Integer status);	/**	 * 修改评论对象	 * @param orderComment	 */	void updateComment(OrderComment orderComment);	/**	 * 获取子订单，返回给request	 * @param request	 */	void getItemById(HttpServletRequest request);		/**	 * 自动确认订单	 * @param request	 * @param status	 */	void changeOrder();	/**	 * 统计订单数量 根据状态	 * @param request	 * @param status	 * @return	 */	Integer countByStatus(Integer adminUserId,HttpServletRequest request, Integer status);	/**	 * 获取订单根据状态	 * @param adminUserId	 * @param request	 */	void getOrdersDetailList(Integer adminUserId, HttpServletRequest request);    	//当天销量	void getOrderSales(HttpServletRequest request, String mallType,Integer currentPage,Integer pageSize,String sTM,String eTM);			//修改销量	void editSalesVolume(HttpServletRequest request,HttpServletResponse response,String type,String sellerName);		//保存销量	void saveSalesVolume(HttpServletRequest request ,HttpServletResponse response,String[] ids,String type);	/**	 * 置顶店铺	 * @param request	 * @param response	 * @return	 */	Map<String, Object> zhiding(HttpServletRequest request,			HttpServletResponse response);	/**	 * 查询积分夺宝中奖用户	 * @param searchWord 	 */	 PageResult<ReGoodsorderItem> getItemList(HttpServletRequest request,Integer currentPage, String searchWord);	/**	 * 查询幸运抽奖中奖用户	 * @param request	 * @param currentPage	 * @param typeId	 * @return	 */	PageResult<ReGoodsorder> getOrderList(HttpServletRequest request,			Integer currentPage, String typeId);	/**	 * 导出中奖用户	 * @param request	 * @param response	 * @param typeId 	 */	void excelPortList(HttpServletRequest request, HttpServletResponse response, String typeId);    }