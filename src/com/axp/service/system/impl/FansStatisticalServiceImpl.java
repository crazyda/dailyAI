package com.axp.service.system.impl;import java.util.ArrayList;import java.util.List;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.commons.lang.StringUtils;import org.springframework.stereotype.Service;import com.axp.dao.FansStatisticalDao;import com.axp.model.AdminUser;import com.axp.model.ProvinceEnum;import com.axp.model.UserLoginRecord;import com.axp.model.Users;import com.axp.model.UsersOperationRecord;import com.axp.service.professional.UserService;import com.axp.service.system.FansStatisticalService;import com.axp.util.PageInfo;import com.axp.util.QueryModel;import com.axp.util.Utility;@Servicepublic class FansStatisticalServiceImpl extends BaseServiceImpl implements FansStatisticalService {	@Resource	private UserService userService;	@Resource	private FansStatisticalDao fansStatisticalDao;	@Override	public void getlist(HttpServletRequest request, HttpServletResponse response,String sTM,String eTM,String zoneId) {		Integer current_user_id = (Integer) request.getSession().getAttribute("currentUserId");		Integer level =  (Integer) request.getSession().getAttribute("userLevel");		 List<ProvinceEnum> zonelist=null;		 AdminUser  au= adminUserDAO.findById(current_user_id);		 if (level >= 95) {				// 获取城市			  zonelist = userService.getZone(2);		}else {			  zonelist = new ArrayList<ProvinceEnum>();			  zonelist.add(au.getProvinceEnum());		}		 request.setAttribute("zonelist", zonelist);		String pagestr = request.getParameter("page");//分页条件	    PageInfo pageInfo = new PageInfo();        Integer count = fansStatisticalDao.getCount(request);        StringBuffer sb = new StringBuffer();        if(StringUtils.isNotBlank(sTM))sb.append("&sTM=").append(sTM);        if(StringUtils.isNotBlank(eTM))sb.append("&eTM=").append(eTM);        if(StringUtils.isNotBlank(zoneId)){        	sb.append("&zoneId=").append(zoneId);        	ProvinceEnum enum1=provinceEnumDAO.findById(Integer.parseInt(zoneId));    		request.setAttribute("enum1", enum1);        }        pageInfo.setParam(sb+"&page=");        Utility.setPageInfomation(pageInfo, pagestr, pageSize+"", count);        int start = pageInfo.getCurrentPage() * pageInfo.getPageSize();        int end = pageInfo.getPageSize();        List<UsersOperationRecord> uorlist = new ArrayList<UsersOperationRecord>();        if (sb.length()>0) {        	  List<UsersOperationRecord> usersOperationRecord=fansStatisticalDao.getOperation(request,start,end);              for (UsersOperationRecord operationRecord:usersOperationRecord) {              	if (operationRecord.getUserId()!=null && operationRecord.getUserId()>0 ) {              		Users users=usersDAO.findById(operationRecord.getUserId());              		operationRecord.setUsers(users);              		uorlist.add(operationRecord);      			}else{      				continue;      			}              	if (operationRecord.getZoneId()!=null && operationRecord.getZoneId()>0 ) {      				ProvinceEnum provinceEnum=provinceEnumDAO.findById(operationRecord.getZoneId());      				operationRecord.setProvinceEnum(provinceEnum);      			}      		}               if (usersOperationRecord!=null&&usersOperationRecord.size()>0) {                  request.setAttribute("page", pagestr);                  request.setAttribute("count", count);                  request.setAttribute("sTM", sTM);          		  request.setAttribute("eTM", eTM);                  request.setAttribute("usersOperationRecord", uorlist);                  request.setAttribute("pageFoot", pageInfo.getCommonDefaultPageFootView());      		}		}                      	}	@Override	public void getfansList(HttpServletRequest request,			HttpServletResponse response, String sTM, String eTM, String zoneId,String userId) {		Integer current_user_id = (Integer) request.getSession().getAttribute("currentUserId");		Integer level =  (Integer) request.getSession().getAttribute("userLevel");		 List<ProvinceEnum> zonelist=null;		 AdminUser  au= adminUserDAO.findById(current_user_id);		 if (level >= 95) {				// 获取城市			  zonelist = userService.getZone(2);		}else{			  zonelist=userService.getZoneByAdmin(au.getProvinceEnum().getId());		}		 request.setAttribute("zonelist", zonelist);			String pagestr = request.getParameter("page");//分页条件			PageInfo pageInfo = new PageInfo();			int count=fansStatisticalDao.getSum(request);			StringBuffer sb = new StringBuffer();		    if(StringUtils.isNotBlank(sTM))sb.append("&sTM=").append(sTM).append("00:00:00");		    if(StringUtils.isNotBlank(eTM))sb.append("&eTM=").append(eTM).append("23:59:59");		    if(StringUtils.isNotBlank(zoneId)){		    ProvinceEnum enum1=provinceEnumDAO.findById(Integer.parseInt(zoneId));		   	 if (enum1.getLevel()==2) {				 QueryModel queryModel = new QueryModel();					queryModel.combPreEquals("isValid", true);					queryModel.combPreEquals("provinceEnum.id", Integer.parseInt(zoneId), "parentId");					List<ProvinceEnum> plist = dateBaseDao.findLists(ProvinceEnum.class, queryModel);					if (plist!=null&&plist.size()>0) {						sb.append(" and zoneId in(");						for(int i=0;i<plist.size();i++){							if(i==(plist.size()-1)){								sb.append(plist.get(i).getId().toString());							}else{								sb.append(plist.get(i).getId().toString()+",");							} 						}						if(sb.indexOf(",")!=-1){						sb.append(","+zoneId.toString());						}else{							sb.append(zoneId.toString());							}						sb.append(")");											}			 }else{				sb.append(" and zoneId=").append(zoneId);			 }		    	request.setAttribute("enum1", enum1);		    }		    if(StringUtils.isNotBlank(userId))sb.append("&userId=").append(userId);		    String str="zoneId="+zoneId;		  		    		    if(StringUtils.isNotBlank(sTM)){		    	str+="&sTM="+sTM;		    }		    if(StringUtils.isNotBlank(userId)){		    	str+="&userId="+userId;		    }		    if(StringUtils.isNotBlank(eTM)){		    	str+="&eTM="+eTM;		    }		    str+="&page=";		    pageInfo.setParam(str);		    Utility.setPageInfomation(pageInfo, pagestr, pageSize+"", count);		    int start = pageInfo.getCurrentPage() * pageInfo.getPageSize();		    int end = pageInfo.getPageSize();		    if (sb.length()>0) {		    	List<UserLoginRecord> usersOperationRecord=fansStatisticalDao.getRecordList(request, start, end);				  for (UserLoginRecord operationRecord:usersOperationRecord) {		      			if (operationRecord.getZoneId()!=null) {		      				ProvinceEnum provinceEnum=provinceEnumDAO.findById(operationRecord.getZoneId());		      				operationRecord.setProvinceEnum(provinceEnum);		      			}		      		}				  if (usersOperationRecord!=null&&usersOperationRecord.size()>0) {					  					  	request.setAttribute("page", pagestr);			            request.setAttribute("count", count);			            request.setAttribute("sTM", sTM);			     		request.setAttribute("eTM", eTM);			            request.setAttribute("usersOperationRecord", usersOperationRecord);			            request.setAttribute("pageFoot", pageInfo.getCommonDefaultPageFootView());				}			}		    request.setAttribute("userId", userId);	}	}