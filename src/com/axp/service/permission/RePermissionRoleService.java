package com.axp.service.permission;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletRequest;import com.axp.model.AdminUser;import com.axp.model.RePermission;import com.axp.model.RePermissionRole;import com.axp.query.PageResult;public interface RePermissionRoleService {    /**     * 获取给定的用户的给定页的角色对象们；     *     * @param adminUserId    后台用户id；     * @param currentPage    当前页；     * @param pageSize       每页条数；     * @param permissionName 权限名称（搜索用）     * @return     */    PageResult<RePermissionRole> getRoleList(Integer adminUserId, Integer currentPage, Integer pageSize, String permissionName);    /**     * 根据id寻找权限角色对象；     *     * @param id 角色id值；     * @return     */    RePermissionRole get(Integer id);    /**     * 将当前登录用户的权限，和所拥有的菜单选项放到session中；     *     * @param request     */    void putPermissionAndItemToSession(HttpServletRequest request) throws Exception;    /**     * 根据后台用户对象，找到这个对象拥有的全部对象，并进行分类；     *     * @param adminUser 登录用户；     * @return     */    Map<String, List<RePermission>> getClassifyPermission(AdminUser adminUser) throws Exception;    /**     * 报错角色操作；     *     * @param roleId        角色id（编辑的时候有）；     * @param roleName      角色名称；     * @param rePermissions 角色的权限的id集合；     * @param reItems       角色的菜单的id集合；     * @param adminUser     后台登录用户；     */    void doSave(Integer roleId, String roleName, List<Integer> rePermissions, List<Integer> reItems, AdminUser adminUser);    /**     * 根据角色id删除角色；     * 如果这个角色已经被赋予某个admiUser，也就是说别使用了，那么就不给删除；     *     * @param id 要删除的角色id值；     * @return     */    Boolean doDelete(Integer id);}